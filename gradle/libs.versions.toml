[plugins]
spring-plugin-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
graal-native-buildtools = { id = "org.graalvm.buildtools.native", version.ref = "graal" }
cloud-buildLogic-spotless = { id = "org.incendo.cloud-build-logic.spotless", version.ref = "cloud-build-logic" }
cloud-buildLogic-rootProject-publishing = { id = "org.incendo.cloud-build-logic.publishing.root-project", version.ref = "cloud-build-logic" }
cloud-buildLogic-rootProject-spotless = { id = "org.incendo.cloud-build-logic.spotless.root-project", version.ref = "cloud-build-logic" }

[versions]
cloud-build-logic = "0.0.15"
springBoot = "3.3.0"
ktlint = "1.3.0"
checkstyle = "10.17.0"
kotlin = "1.9.24"
graal = "0.9.28"

slf4j = "2.0.13"
cloud = "2.0.0"

springShellBom = "3.3.0"

# Test
truth = "1.4.2"
awaitility = "4.2.1"

[libraries]
cloud-build-logic = { module = "org.incendo:cloud-build-logic", version.ref = "cloud-build-logic" }
gradleKotlinJvm = { group = "org.jetbrains.kotlin.jvm", name = "org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }

slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }
awaitility = { group = "org.awaitility", name = "awaitility", version.ref = "awaitility" }

# Spring
spring-shell = { group = "org.springframework.shell", name = "spring-shell-starter" }
spring-shell-dependencies = { group = "org.springframework.shell", name = "spring-shell-dependencies", version.ref = "springShellBom" }
spring-boot-autoconfigure = { group = "org.springframework.boot", name = "spring-boot-autoconfigure" }
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
spring-shell-test = { group = "org.springframework.shell", name = "spring-shell-test" }
spring-shell-test-autoconfiguration = { group = "org.springframework.shell", name = "spring-shell-test-autoconfigure" }

# Cloud
cloud-core = { group = "org.incendo", name = "cloud-core", version.ref = "cloud" }
cloud-annotations = { group = "org.incendo", name = "cloud-annotations", version.ref = "cloud" }

# Test
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }

[bundles]
